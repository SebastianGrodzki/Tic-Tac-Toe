<mah:MetroWindow x:Class="TicTacToe.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"         
        xmlns:local="clr-namespace:TicTacToe"
        mc:Ignorable="d"    
        Title="MainWindow" Height="450" Width="800">

    <mah:MetroWindow.Resources>
        <Style x:Key="BoardLabel" TargetType="Label" BasedOn="{StaticResource
            {x:Type Label}}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="FontSize" Value="70"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Margin" Value="10" />
            <Setter Property="FontSize" Value="20" />
        </Style>

        <Style TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
            <Setter Property="Margin" Value="10" />
            <Setter Property="FontSize" Value="20" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
        </Style>

    </mah:MetroWindow.Resources>
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>

        <Grid Margin="50">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <Label
                Style="{StaticResource BoardLabel}"
                Content="{Binding Board[0-0].Content}"
                IsEnabled="{Binding Board[0-0].IsEnabled}"
                Background="{Binding Board[0-0].Background}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonDown" >
                        <i:InvokeCommandAction Command="{Binding 
                            BoardClickCommand}" CommandParameter="0-0" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Label>

            <Label
                Style="{StaticResource BoardLabel}"
                BorderThickness="2 0 2 0"
                Grid.Column="1"
                Content="{Binding Board[0-1].Content}"
                IsEnabled="{Binding Board[0-1].IsEnabled}"
                Background="{Binding Board[0-1].Background}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonDown" >
                        <i:InvokeCommandAction Command="{Binding 
                            BoardClickCommand}" CommandParameter="0-1" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Label>

            <Label
                Style="{StaticResource BoardLabel}"
                Grid.Column="2"
                Content="{Binding Board[0-2].Content}"
                IsEnabled="{Binding Board[0-2].IsEnabled}"
                Background="{Binding Board[0-2].Background}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonDown" >
                        <i:InvokeCommandAction Command="{Binding 
                            BoardClickCommand}" CommandParameter="0-2" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Label>

            <Label
                Style="{StaticResource BoardLabel}"
                BorderThickness="0 2 0 2"
                Grid.Row="1"
                Content="{Binding Board[1-0].Content}"
                IsEnabled="{Binding Board[1-0].IsEnabled}"
                Background="{Binding Board[1-0].Background}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonDown" >
                        <i:InvokeCommandAction Command="{Binding 
                            BoardClickCommand}" CommandParameter="1-0" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Label>

            <Label
                Style="{StaticResource BoardLabel}"
                BorderThickness="2"
                Grid.Column="1"
                Grid.Row="1"
                Content="{Binding Board[1-1].Content}"
                IsEnabled="{Binding Board[1-1].IsEnabled}"
                Background="{Binding Board[1-1].Background}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonDown" >
                        <i:InvokeCommandAction Command="{Binding 
                            BoardClickCommand}" CommandParameter="1-1" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Label>

            <Label
                Style="{StaticResource BoardLabel}"
                BorderThickness="0 2 0 2"
                Grid.Column="2"
                Grid.Row="1"
                Content="{Binding Board[1-2].Content}"
                IsEnabled="{Binding Board[1-2].IsEnabled}"
                Background="{Binding Board[1-2].Background}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonDown" >
                        <i:InvokeCommandAction Command="{Binding 
                            BoardClickCommand}" CommandParameter="1-2" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Label>

            <Label
                Style="{StaticResource BoardLabel}"
                Grid.Row="2"
                Content="{Binding Board[2-0].Content}"
                IsEnabled="{Binding Board[2-0].IsEnabled}"
                Background="{Binding Board[2-0].Background}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonDown" >
                        <i:InvokeCommandAction Command="{Binding 
                            BoardClickCommand}" CommandParameter="2-0" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Label>

            <Label
                Style="{StaticResource BoardLabel}"
                BorderThickness="2 0 2 0"
                Grid.Row="2"
                Grid.Column="1"
                Content="{Binding Board[2-1].Content}"
                IsEnabled="{Binding Board[2-1].IsEnabled}"
                Background="{Binding Board[2-1].Background}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonDown" >
                        <i:InvokeCommandAction Command="{Binding 
                            BoardClickCommand}" CommandParameter="2-1" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Label>

            <Label
                Style="{StaticResource BoardLabel}"
                Grid.Row="2"
                Grid.Column="2"
                Content="{Binding Board[2-2].Content}"
                IsEnabled="{Binding Board[2-2].IsEnabled}"
                Background="{Binding Board[2-2].Background}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonDown" >
                        <i:InvokeCommandAction Command="{Binding 
                            BoardClickCommand}" CommandParameter="2-2" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Label>
        </Grid>

        <StackPanel Grid.Column="1" Orientation="Horizontal">
            <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
        </StackPanel>

        <Grid Grid.Column="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="70" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <Button Content="NOWA GRA" Command="{Binding NewGameCommand}" />
            
            <Button Content="RESET" Command="{Binding ResetCommand}" Grid.Column="1" />

            <Label Content="{Binding TurnInfo}" Grid.Row="1"
                   Grid.ColumnSpan="2"/>

            <Label Content="{Binding GameInfo}" Grid.Row="2"
                   Grid.ColumnSpan="2"/>

            <DataGrid ItemsSource="{Binding GamePlays}" Grid.Row="3"
                      Grid.ColumnSpan="2" Margin="10" IsReadOnly="True"
                      AutoGenerateColumns="False">
                <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding Number}" Header="Rozgrywka" />
                    <DataGridTextColumn Binding="{Binding SignXInfo}" Header="X" />
                    <DataGridTextColumn Binding="{Binding SignOInfo}" Header="O" />
                </DataGrid.Columns>
                
            </DataGrid>

        </Grid>
        
    </Grid>
</mah:MetroWindow>
